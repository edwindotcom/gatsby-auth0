{"version":3,"sources":["webpack:///./src/pages/AuthorList.js","webpack:///./src/pages/AddAuthor.js"],"names":["GET_AUTHORS","gql","_templateObject","AuthorList","_useQuery","useQuery","loading","error","data","message","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","author","map","index","key","name","ADD_AUTHOR","AddAuthor","_useState","useState","setAuthor","_useMutation","useMutation","update","cache","_ref","existingAuthors","readQuery","query","newAuthor","insert_author","returning","writeQuery","concat","_useMutation$","react__WEBPACK_IMPORTED_MODULE_1___default","onSubmit","event","preventDefault","variables","htmlFor","value","onChange","target","type"],"mappings":"sUAIA,IAAMA,EAAcC,YAAHC,KA0BFC,UAjBI,WAAM,IAAAC,EACUC,YAASL,GAAlCM,EADeF,EACfE,QAASC,EADMH,EACNG,MAAOC,EADDJ,EACCI,KAExB,OAAIF,EAAgB,aAChBC,EAAO,UAAiBA,EAAME,QAGhCC,EAAAC,EAAAC,cAAA,WACGJ,EAAKK,OAAOC,IAAI,SAACD,EAAQE,GAAT,OACfL,EAAAC,EAAAC,cAAA,OAAKI,IAAKD,GACRL,EAAAC,EAAAC,cAAA,UAAKC,EAAOI,iVClBtB,IAAMC,EAAajB,YAAHC,KAwDDiB,UA7CG,WAAM,IAAAC,EACMC,mBAAS,IAA9BR,EADeO,EAAA,GACPE,EADOF,EAAA,GAAAG,EAEsBC,YAAYN,EAAY,CAClEO,OAAQ,SAACC,EAADC,GAAqB,IAAXnB,EAAWmB,EAAXnB,KAChBc,EAAU,IACV,IAAMM,EAAkBF,EAAMG,UAAU,CACtCC,MAAO9B,gBAIH+B,EAAYvB,EAAKwB,cAAcC,UAAU,GAC/CP,EAAMQ,WAAW,CACfJ,MAAO9B,cACPQ,KAAM,CAACK,OAAM,CAAGkB,GAAHI,OAAiBP,EAAgBf,cAX7CmB,EAFeT,EAAA,GAAAa,EAAAb,EAAA,GAEEjB,EAFF8B,EAEE9B,QAASC,EAFX6B,EAEW7B,MAgBjC,GAAID,EAAS,MAAO,aACpB,GAAIC,EAAO,gBAAiBA,EAAME,QAWlC,OACE4B,EAAA1B,EAAAC,cAAA,QAAM0B,SAVa,SAAAC,GACnBA,EAAMC,iBACNR,EAAc,CACZS,UAAW,CACTxB,KAAMJ,OAORwB,EAAA1B,EAAAC,cAAA,SAAO8B,QAAQ,UAAf,cAEEL,EAAA1B,EAAAC,cAAA,SACEK,KAAK,SACL0B,MAAO9B,EACP+B,SAAU,SAAAL,GAAK,OAAIjB,EAAUiB,EAAMM,OAAOF,WAG9CN,EAAA1B,EAAAC,cAAA,UAAQkC,KAAK,UAAb","file":"component---src-pages-add-author-js-f6d2fdf8d0049cc85bf0.js","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_AUTHORS = gql`\n  query {\n    author {\n      id\n      name\n    }\n  }\n`;\n\nconst AuthorList = () => {\n  const { loading, error, data } = useQuery(GET_AUTHORS);\n\n  if (loading) return \"loading...\";\n  if (error) return `error: ${error.message}`;\n\n  return (\n    <div>\n      {data.author.map((author, index) => (\n        <div key={index}>\n          <h2>{author.name}</h2>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AuthorList;\nexport { GET_AUTHORS };\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { GET_AUTHORS } from \"./AuthorList\";\n\nconst ADD_AUTHOR = gql`\n  mutation insert_author($name: String!) {\n    insert_author(objects: { name: $name }) {\n      returning {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst AddAuthor = () => {\n  const [author, setAuthor] = useState(\"\");\n  const [insert_author, { loading, error }] = useMutation(ADD_AUTHOR, {\n    update: (cache, { data }) => {\n      setAuthor(\"\");\n      const existingAuthors = cache.readQuery({\n        query: GET_AUTHORS\n      });\n\n      // Add the new author to the cache\n      const newAuthor = data.insert_author.returning[0];\n      cache.writeQuery({\n        query: GET_AUTHORS,\n        data: {author: [newAuthor, ...existingAuthors.author]}\n      });\n    }\n  });\n\n  if (loading) return \"loading...\";\n  if (error) return `error: ${error.message}`;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    insert_author({\n      variables: {\n        name: author\n      }\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"author\">\n        Add Author:\n        <input\n          name=\"author\"\n          value={author}\n          onChange={event => setAuthor(event.target.value)}\n        />\n      </label>\n      <button type=\"submit\">ADD</button>\n    </form>\n  );\n};\n\nexport default AddAuthor;\n"],"sourceRoot":""}